return {
    { "<leader>a", group = "Harpoon", icon = { icon = "󰠳", color = "orange" } },
    { "<leader>aa", "<cmd>HarpoonAdd<CR>", desc = "Add to Harpoon" },
    { "<leader>aw", "<cmd>HarpoonQuickMenu<CR>", desc = "Toggle Window Menu" },
    { "<leader>a1", "<cmd>Harpoon1<CR>", desc = "Go to 1" },
    { "<leader>a2", "<cmd>Harpoon2<CR>", desc = "Go to 2" },
    { "<leader>a3", "<cmd>Harpoon3<CR>", desc = "Go to 3" },
    { "<leader>a4", "<cmd>Harpoon4<CR>", desc = "Go to 4" },
    { "<leader>a5", "<cmd>Harpoon5<CR>", desc = "go to 5" },
    { "<leader>a6", "<cmd>Harpoon6<CR>", desc = "Go to 6" },
    { "<leader>a7", "<cmd>Harpoon7<CR>", desc = "Go to 7" },
    { "<leader>a8", "<cmd>Harpoon8<CR>", desc = "go to 8" },
    { "<leader>a9", "<cmd>Harpoon9<CR>", desc = "Go to 9" },
    { "<leader>an", "<cmd>HarpoonNext<CR>", desc = "Next", icon = { icon = "󰒭", color = "orange" } },
    { "<leader>ap", "<cmd>HarpoonPrevious<CR>", desc = "Previous", icon = { icon = "󰒮", color = "orange" } },

    { "<leader>c", group = "Search-Replace", icon = { icon = "󰛔", color = "cyan" } },
    { "<leader>cW", "<CMD>SearchReplaceSingleBufferCWORD<CR>", desc = "[W]ORD" },
    { "<leader>cb", group = "Search-Replace-MultiBuffer" },
    { "<leader>cbW", "<CMD>SearchReplaceMultiBufferCWORD<CR>", desc = "[W]ORD" },
    { "<leader>cbe", "<CMD>SearchReplaceMultiBufferCExpr<CR>", desc = "[e]xpr" },
    { "<leader>cbf", "<CMD>SearchReplaceMultiBufferCFile<CR>", desc = "[f]ile" },
    { "<leader>cbo", "<CMD>SearchReplaceMultiBufferOpen<CR>", desc = "[o]pen" },
    {
        "<leader>cbs",
        "<CMD>SearchReplaceMultiBufferSelections<CR>",
        desc = "SearchReplaceMultiBuffer [s]elction list",
    },
    { "<leader>cbw", "<CMD>SearchReplaceMultiBufferCWord<CR>", desc = "[w]ord" },
    { "<leader>ce", "<CMD>SearchReplaceSingleBufferCExpr<CR>", desc = "[e]xpr" },
    { "<leader>cf", "<CMD>SearchReplaceSingleBufferCFile<CR>", desc = "[f]ile" },
    { "<leader>co", "<CMD>SearchReplaceSingleBufferOpen<CR>", desc = "[o]pen" },
    {
        "<leader>cs",
        "<CMD>SearchReplaceSingleBufferSelections<CR>",
        desc = "SearchReplaceSingleBuffer [s]elction list",
    },
    { "<leader>cw", "<CMD>SearchReplaceSingleBufferCWord<CR>", desc = "[w]ord", nowait = true, remap = false },

    { "<leader>D", "<cmd>LazyDoToggle<cr>", desc = "LazyDo" },
    { "<leader>d", group = "Do" },
    { "<leader>dd", group = "Debug with Dap" },
    { "<leader>ddO", "<cmd>lua require'dap'.step_out()<cr>", desc = "Out" },
    {
        "<leader>ddb",
        "<cmd>lua require'dap'.toggle_breakpoint()<cr>",
        desc = "Breakpoint",
    },
    { "<leader>ddc", "<cmd>lua require'dap'.continue()<cr>", desc = "Continue" },
    { "<leader>ddi", "<cmd>lua require'dap'.step_into()<cr>", desc = "Into" },
    { "<leader>ddl", "<cmd>lua require'dap'.run_last()<cr>", desc = "Last" },
    { "<leader>ddo", "<cmd>lua require'dap'.step_over()<cr>", desc = "Over" },
    { "<leader>ddr", "<cmd>lua require'dap'.repl.toggle()<cr>", desc = "Repl" },
    { "<leader>ddu", "<cmd>lua require'dapui'.toggle()<cr>", desc = "UI" },
    { "<leader>ddx", "<cmd>lua require'dap'.terminate()<cr>", desc = "Exit" },

    { "<leader>da", "<cmd>Do<cr>", desc = "[A]dd Task" },

    { "<leader>f", group = "DiffView", icon = { icon = "", color = "green" } },
    { "<leader>fc", "<cmd>DiffviewClose<cr>", desc = "Close DiffView" },
    { "<leader>ff", "<cmd>DiffviewFocusFiles<cr>", desc = "Focus Files DiffView" },
    { "<leader>fh", "<cmd>DiffviewFileHistory<cr>", desc = "History Files DiffView" },
    {
        "<leader>fj",
        "<cmd>DiffviewFileHistory %<cr>",
        desc = "History Current File DiffView",
    },
    { "<leader>fr", "<cmd>DiffviewRefresh<cr>", desc = "Refresh DiffView" },
    { "<leader>ft", "<cmd>DiffviewToggleFiles<cr>", desc = "Toggle Files DiffView" },
    { "<leader>fv", "<cmd>DiffviewOpen<cr>", desc = "Open DiffView" },
    { "<leader>g", group = "Git" },
    { "<leader>gC", "<cmd>Telescope git_bcommits<cr>", desc = "Checkout buffers commit" },
    {
        "<leader>gR",
        "<cmd>lua require 'gitsigns'.reset_buffer()<cr>",
        desc = "Reset Buffer",
    },
    { "<leader>ga", "<cmd>AdvancedGitSearch<cr>", desc = "Advanced Git Search" },
    { "<leader>gb", "<cmd>Telescope git_branches<cr>", desc = "Checkout branch" },
    { "<leader>gc", "<cmd>Telescope git_commits<cr>", desc = "Checkout commit" },
    { "<leader>gd", "<cmd>Gitsigns diffthis HEAD<cr>", desc = "Diff" },
    { "<leader>gj", "<cmd>lua require 'gitsigns'.next_hunk()<cr>", desc = "Next Hunk" },
    { "<leader>gk", "<cmd>lua require 'gitsigns'.prev_hunk()<cr>", desc = "Prev Hunk" },
    { "<leader>gl", "<cmd>lua require 'gitsigns'.blame_line()<cr>", desc = "Blame" },
    { "<leader>go", "<cmd>Telescope git_status<cr>", desc = "Open changed file" },
    {
        "<leader>gp",
        "<cmd>lua require 'gitsigns'.preview_hunk()<cr>",
        desc = "Preview Hunk",
    },
    { "<leader>gr", "<cmd>lua require 'gitsigns'.reset_hunk()<cr>", desc = "Reset Hunk" },
    { "<leader>gs", "<cmd>lua require 'gitsigns'.stage_hunk()<cr>", desc = "Stage Hunk" },
    {
        "<leader>gu",
        "<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>",
        desc = "Undo Stage Hunk",
    },
    { "<leader>i", group = "Directory", icon = { icon = "", color = "purple" } },
    {
        "<leader>ic",
        "<cmd>lcd %:p:h<cr>:pwd<CR>",
        desc = "Change Directory only for current window",
    },
    { "<leader>ii", "<cmd>cd %:p:h<cr>:pwd<CR>", desc = "Change Directory" },
    { "<leader>iv", "<cmd>pwd<cr>", desc = "View Current Directory" },
    { "<leader>l", group = "LSP", icon = { icon = "󰘦", color = "orange" } },
    { "<leader>lH", "<cmd>Lspsaga hover_doc ++keep<cr>", desc = "Keep hover" },
    { "<leader>lO", "<cmd>Lspsaga term_toggle<cr>", desc = "Toggle Terminal" },
    { "<leader>lR", "<cmd>Lspsaga rename ++project<cr>", desc = "Rename Project" },
    { "<leader>lS", "<cmd>Lspsaga finder def+ref+im<cr>", desc = "Document Symbols" },
    {
        "<leader>lW",
        "<cmd>Lspsaga show_workspace_diagnostics ++normal<cr>",
        desc = "Workspace Diagnostics split",
    },
    { "<leader>la", "<cmd>Lspsaga code_action<cr>", desc = "Code Action" },
    { "<leader>lc", group = "Call hierarchy" },
    { "<leader>lci", "<cmd>Lspsaga incoming_calls<cr>", desc = "Incomming Calls" },
    { "<leader>lco", "<cmd>Lspsaga outgoing_calls<cr>", desc = "Outgoing Calls" },
    {
        "<leader>ld",
        "<cmd>Lspsaga show_buf_diagnostics<cr>",
        desc = "Document Diagnostics",
    },
    {
        "<leader>lf",
        '<CMD>lua require("conform").format({ async = true, lsp_fallback = true })<CR>',
        desc = "Format",
    },
    { "<leader>lg", group = "Go To" },
    {
        "<leader>lgD",
        "<cmd>Lspsaga goto_type_definition<cr>",
        desc = "Go to Type Definition",
    },
    { "<leader>lgd", "<cmd>Lspsaga goto_definition<cr>", desc = "Go to Definition" },
    {
        "<leader>lgi",
        "<cmd>lua vim.lsp.buf.implementation()<cr>",
        desc = "Go to Implementation",
    },
    { "<leader>li", "<cmd>LspInfo<cr>", desc = "Info" },
    { "<leader>lj", "<cmd>Lspsaga diagnostic_jump_next<CR>", desc = "Next Diagnostic" },
    { "<leader>lk", "<cmd>Lspsaga diagnostic_jump_prev<cr>", desc = "Prev Diagnostic" },
    { "<leader>ll", "<cmd>Lspsaga show_line_diagnostics<cr>", desc = "Line Diagnostic" },
    { "<leader>ln", "<cmd>Navbuddy<cr>", desc = "Navbuddy" },
    { "<leader>lo", "<cmd>Lspsaga outline<cr>", desc = "Toggle outline" },
    { "<leader>lp", group = "Peek..." },
    {
        "<leader>lpD",
        "<cmd>Lspsaga peek_type_definition<cr>",
        desc = "Peek Type Definition",
    },
    { "<leader>lpd", "<cmd>Lspsaga peek_definition<cr>", desc = "Peek Definition" },
    { "<leader>lr", "<cmd>Lspsaga rename<cr>", desc = "Rename" },
    { "<leader>ls", group = "Status LSP" },
    { "<leader>lsl", "<cmd>LspStart ltex<cr>", desc = "Start ltex" },
    { "<leader>lss", "<cmd>LspStop<cr>", desc = "Stop LSP" },
    { "<leader>lst", "<cmd>LspStart tailwindcss<cr>", desc = "Start tailwindcss" },
    { "<leader>lt", group = "Telescope" },
    { "<leader>ltK", "<cmd>lua vim.lsp.buf.hover()<CR>", desc = "show hover" },
    {
        "<leader>ltS",
        "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>",
        desc = "Workspace Symbols",
    },
    { "<leader>lta", "<cmd>lua vim.lsp.buf.code_action()<cr>", desc = "Code Action" },
    {
        "<leader>ltd",
        "<cmd>Telescope diagnostics bufnr=0<cr>",
        desc = "Document Diagnostics",
    },
    {
        "<leader>ltj",
        "<cmd>lua vim.diagnostic.goto_next({buffer=0})<CR>",
        desc = "Next Diagnostic",
    },
    {
        "<leader>ltk",
        "<cmd>lua vim.diagnostic.goto_prev({buffer=0})<cr>",
        desc = "Prev Diagnostic",
    },
    { "<leader>ltl", "<cmd>lua vim.lsp.codelens.run()<cr>", desc = "CodeLens Action" },
    { "<leader>ltq", "<cmd>lua vim.lsp.diagnostic.set_loclist()<cr>", desc = "Quickfix" },
    { "<leader>ltr", "<cmd>lua vim.lsp.buf.rename()<cr>", desc = "rename" },
    {
        "<leader>lts",
        "<cmd>Telescope lsp_document_symbols<cr>",
        desc = "Document Symbols",
    },
    { "<leader>ltw", "<cmd>Telescope diagnostics<cr>", desc = "Workspace Diagnostics" },
    {
        "<leader>lu",
        "<cmd>Lspsaga show_cursor_diagnostics<cr>",
        desc = "Cursor Diagnostic",
    },
    {
        "<leader>lw",
        "<cmd>Lspsaga show_workspace_diagnostics<cr>",
        desc = "Workspace Diagnostics",
    },
    { "<leader>m", group = "Markdown Obsidian", icon = { icon = "", color = "azure" } },
    { "<leader>mF", "<cmd>ObsidianTags<CR>", desc = "find Tags" },
    { "<leader>mI", "<cmd>ObsidianLinkNew<CR>", desc = "Create new link" },
    { "<leader>mR", "<cmd>ObsidianRename<CR>", desc = "Rename File" },
    { "<leader>mT", "<cmd>ObsidianTomorrow<cr>", desc = "Open Tomorrow File" },
    { "<leader>md", "<cmd>ObsidianDailies<CR>", desc = "Dailies" },
    { "<leader>me", "<cmd>ObsidianTemplate<CR>", desc = "Template" },
    { "<leader>mf", "<cmd>ObsidianBacklinks<CR>", desc = "find References" },
    { "<leader>mi", "<cmd>ObsidianLinks<CR>", desc = "List Link" },
    { "<leader>mM", "<cmd>Markview<CR>", desc = "Enable Markview" },
    { "<leader>mm", group = "  More Markdown" },
    { "<leader>mme", "<cmd>EasyTablesImportThisTable<cr>", desc = "Edit current table" },
    { "<leader>mmj", "<cmd>InsertRowBelow<cr>", desc = "Insert Row Below in Table" },
    { "<leader>mmk", "<cmd>InsertRowAbove<cr>", desc = "Insert Row Above in Table" },
    { "<leader>mml", "<cmd>InsertColumnRight<cr>", desc = "Insert Column Right in Table" },
    { "<leader>mmh", "<cmd>InsertColumnLeft<cr>", desc = "Insert Column Right in Table" },
    { "<leader>mms", "<cmd>ExportTable<cr>", desc = "Save changes to table" },
    { "<leader>mn", "<cmd>ObsidianNew<CR>", desc = "Create new file" },
    { "<leader>mO", "<cmd>ObsidianOpen<cr>", desc = "Open File" },
    { "<leader>mp", "<cmd>PencilToggle<CR>", desc = "Pencil Toggle" },
    { "<leader>mq", "<cmd>ObsidianQuickSwitch<CR>", desc = "Quick Switch" },
    { "<leader>ms", "<cmd>ObsidianSearch<CR>", desc = "Search File" },
    { "<leader>mo", "<cmd>ObsidianToday<cr>", desc = "Open Today File" },
    { "<leader>mx", "<cmd>ObsidianExtractNote<cr>", desc = "Extract Note" },
    { "<leader>my", "<cmd>ObsidianYesterday<cr>", desc = "Open Yesterday File" },
    { "<leader>p", group = "Preview", icon = { icon = "", color = "yellow" } },
    { "<leader>pM", "<cmd>MarkdownPreviewStop<CR>", desc = "Stop Markdown" },
    { "<leader>ph", "<cmd>Bracey<CR>", desc = "Preview HTML" },
    { "<leader>pm", "<cmd>MarkdownPreview<CR>", desc = "Markdown" },
    { "<leader>pp", "<cmd>PlantUMLRun<CR>", desc = "Plantuml" },
    { "<leader>pt", "<cmd>VimtexCompile<CR>", desc = "LaTeX" },
    { "<leader>ptt", "<cmd>VimtexCompile<CR>", desc = "LaTeX" },
    { "<leader>ptw", "<cmd>VimtexCountWords<CR>", desc = "spell word" },
    { "<leader>r", group = "Run-Code" },
    { "<leader>rc", "<cmd>RunCode<CR>", desc = "Run Code" },
    { "<leader>rf", "<cmd>RunFile<CR>", desc = "Run File" },
    { "<leader>ro", "<cmd>CompilerOpen<CR>", desc = "Open Compiler" },
    { "<leader>rp", "<cmd>RunProject<CR>", desc = "Run Project" },
    { "<leader>s", group = "Search FZF", icon = { icon = "󰥨", color = "blue" } },
    { "<leader>sF", "<cmd>lua require('fzf-lua').live_grep()<cr>", desc = "Find Text" },
    { "<leader>sb", "<cmd>lua require('fzf-lua').buffers()<cr>", desc = "Buffers" },
    {
        "<leader>sc",
        "<cmd>lua require('fzf-lua').colorschemes()<cr>",
        desc = "Colorscheme",
    },
    { "<leader>sf", "<cmd>lua require('fzf-lua').files()<cr>", desc = "Find files" },
    { "<leader>sh", group = "Help" },
    { "<leader>shh", "<cmd>lua require('fzf-lua').helptags()<cr>", desc = "Help Tags" },
    { "<leader>shm", "<cmd>lua require('fzf-lua').manpages()<cr>", desc = "Man Pages" },
    -- { "<leader>si", "<cmd>Telescope notify<CR>", desc = "Notifications" },
    {
        "<leader>sl",
        "<cmd>lua require('fzf-lua').registers()<cr>",
        desc = "Registers History",
    },
    { "<leader>so", group = "Comment To-dos" },
    {
        "<leader>soo",
        "<cmd>Trouble todo focus=true filter = {tag = {TEST}}<CR>",
        desc = "Search just for TODAY",
    },
    {
        "<leader>sod",
        "<cmd>Trouble todo focus=true filter = {tag = {FIX}}<cr>",
        desc = "Search just for DELAYED",
    },
    {
        "<leader>so1",
        "<cmd>Trouble todo focus=true filter = {tag = {HACK}}<cr>",
        desc = "Search just for WEEK",
    },
    {
        "<leader>so2",
        "<cmd>Trouble todo focus=true filter = {tag = {PERF}}<cr>",
        desc = "Search just for MONTH",
    },
    { "<leader>som", group = "Schedules" },
    {
        "<leader>somp",
        "<cmd>Trouble todo focus=true filter = {tag = {PREF}}<cr>",
        desc = "Search just for PERF",
    },
    {
        "<leader>somt",
        "<cmd>Trouble todo focus=true filter = {tag = {TODO}}<cr>",
        desc = "Search just for TODO",
    },
    {
        "<leader>somw",
        "<cmd>Trouble todo focus=true filter = {tag = {WARN}}<cr>",
        desc = "Search just for WARNING",
    },
    {
        "<leader>soma",
        "<cmd>Trouble todo focus=true<cr>",
        desc = "Search all",
    },
    {
        "<leader>somf",
        "<cmd>Trouble todo focus=true filter = {tag = {FIX}}<cr>",
        desc = "Search just for FIX",
    },
    {
        "<leader>somh",
        "<cmd>Trouble todo focus=true filter = {tag = {HACK}}<cr>",
        desc = "Search just for HACK",
    },
    {
        "<leader>somn",
        "<cmd>Trouble todo focus=true filter = {tag = {NOTE}}<cr>",
        desc = "Search just for NOTE",
    },
    { "<leader>sr", "<cmd>lua require('fzf-lua').oldfiles()<cr>", desc = "Recent File" },
    { "<leader>sm", "<cmd>Telescope smart_open<cr>", desc = "Smart Open" },
    { "<leader>ss", "<cmd>ObsidianSearch<CR>", desc = "Personal Files" },
    -- { "<leader>st", group = "Trouble.nvim" },
    -- { "<leader>sta", "<cmd>TroubleToggle quickfix<cr>", desc = "QuickFix" },
    -- { "<leader>stc", "<cmd>TroubleClose<cr>", desc = "Close Trouble" },
    -- {
    --     "<leader>std",
    --     "<cmd>TroubleToggle document_diagnostics<cr>",
    --     desc = "Document Trouble",
    -- },
    -- { "<leader>stl", "<cmd>TroubleToggle lsp_references<cr>", desc = "lsp_references" },
    -- { "<leader>sto", "<cmd>TroubleRefresh<cr>", desc = "Refresh Trouble" },
    -- { "<leader>str", "<cmd>TroubleToggle loclist<cr>", desc = "loclist" },
    -- { "<leader>stt", "<cmd>TroubleToggle<cr>", desc = "Toggle Trouble" },
    -- {
    --     "<leader>stw",
    --     "<cmd>TroubleToggle workspace_diagnostics<cr>",
    --     desc = "Workspace Trouble",
    -- },
    { "<leader>t", group = "Terminal", icon = { icon = "", color = "green" } },
    {
        "<leader>tT",
        "<cmd>startinsert | set norelativenumber | set nonumber | terminal<cr>",
        desc = "Vertical Terminal in a new Buffer",
    },
    { "<leader>tc", "<cmd>CompilerOpen<cr>", desc = "Compiler File" },
    {
        "<leader>te",
        "<cmd>startinsert | split | resize 15 | set norelativenumber | set nonumber | terminal<cr>",
        desc = "bottom Terminal",
    },
    { "<leader>tf", "<cmd>FTermToggle<cr>", desc = "Toggle Terminal" },
    {
        "<leader>tt",
        "<cmd>startinsert | tabnew | set norelativenumber | set nonumber | terminal<cr>",
        desc = "Terminal in a new Tab",
    },
    { "<leader>v", group = "view fold", icon = { icon = "", color = "purple" } },
    { "<leader>vl", "<cmd>loadview<cr>", desc = "Load View (apply fold)" },
    { "<leader>vm", "<cmd>mkview<cr>", desc = "Make view (remember fold)" },
    { "<leader>w", group = "Toggle other plugins" },
    { "<leader>wC", group = "Colortils" },
    { "<leader>wCa", "<cmd>Colortils gradient<CR>", desc = "Pick Colour on gradient" },
    { "<leader>wCc", "<cmd>Colortils picker<CR>", desc = "Colour Picker" },
    { "<leader>wCd", "<cmd>Colortils darken<CR>", desc = "Darken Colour" },
    { "<leader>wCg", "<cmd>Colortils greyscale<CR>", desc = "Colour to greyscale" },
    { "<leader>wCi", "<cmd>Colortils lighten<CR>", desc = "Lighten Colour" },
    { "<leader>wCl", "<cmd>Colortils css list<CR>", desc = "List css colors" },
    { "<leader>wI", "<cmd>CodeiumDisable<CR>", desc = "No Codeium" },
    { "<leader>wT", "<cmd>TransparentDisable<CR>", desc = "No Transparency" },
    { "<leader>wa", "<cmd>lua require('asciitree').setup()<CR>", desc = "AsciiTree" },
    { "<leader>wb", "<cmd>Block<CR>", desc = "Toggle Block" },
    { "<leader>wc", "<cmd>CccPick<CR>", desc = "ColorPicker" },
    { "<leader>wd", "<cmd>DBUIToggle<CR>", desc = "Database UI" },
    { "<leader>we", "<cmd>Themery<CR>", desc = "Colorscheme picker" },
    { "<leader>wf", "<cmd>FocusToggleBuffer<CR>", desc = "Toggle Focus split Buffers" },
    { "<leader>wg", '<cmd>set guicursor "n-v-c-sm:block,i-ci-ve:ver25-blinkwait300-blinkon200-blinkoff150,r-cr-o:hor20-blinkwait300-blinkon200-blinkoff150"<CR>', desc = "Set guicursor" },

    { "<leader>wh", "<cmd>UndotreeToggle<CR>", desc = "Current File History" },
    { "<leader>wi", "<cmd>CodeiumEnable<CR>", desc = "Codeium" },
    { "<leader>wm", "<cmd>MinimapToggle<CR>", desc = "MinMap" },
    { "<leader>wl", group = "Calendar" },
    { "<leader>wlc", "<cmd>Calendar<CR>", desc = "Open Calendar" },
    { "<leader>wlo", "<cmd>Calendar -view=clock<CR>", desc = "Show Clock" },
    { "<leader>wls", "<cmd>Calendar -view=year -split=vertical -width=27<CR>", desc = "Open Calendar Split" },
    { "<leader>wld", "<cmd>Calendar -day<CR>", desc = "Open Calendar Day" },
    { "<leader>wly", "<cmd>Calendar -year<CR>", desc = "Open Calendar year" },
    { "<leader>wt", "<cmd>TransparentEnable<CR>", desc = "Transparency" },
    { "<leader>wv", "<cmd>PencilToggle<CR>", desc = "vim-pencil" },
    { "<leader>wz", "<cmd>lua Snacks.zen.zoom()<CR>", desc = "Snacks Zoom" },
    { "<leader>z", group = "Lazy", icon = { icon = "󰒲", color = "blue" } },
    { "<leader>za", "<cmd>Lazy show<cr>", desc = "Status" },
    { "<leader>zc", "<cmd>Lazy check<cr>", desc = "Check" },
    { "<leader>zi", "<cmd>Lazy install<cr>", desc = "Install" },
    { "<leader>zs", "<cmd>Lazy sync<cr>", desc = "Sync" },
    { "<leader>zu", "<cmd>Lazy update<cr>", desc = "Update" },
}
